library(scales)
metrics <- tibble(
segmentation_run = c("1", "2", "3", "4", "5"),
no_segments = c(77030, 116428, 70777, 55137, 65368),
labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797, 3057809),
volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292, 0.28),
network_length = c(8644684, 11704105, 8744396, 8928419, 8867950),
mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605, 1.056722),
# mu_fiber = c(),
# mu_plane = c(),
# mu_blob = c()
)
metrics2 <- tibble(
segmentation_run = c("1", "2", "3", "4", "5"),
# no_segments = c(77030, 116428, 70777, 55137),
# labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797),
# volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292),
# network_length = c(8644684, 11704105, 8744396, 8928419),
# mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605),
# mu_fiber = c(0.32, 0, 0, 0.33, 0.33),
# mu_plane = c(0.23, 0, 0, 0.23, 0.),
# mu_blob = c(0.42, 0, 0, 0.41)
mu_fiber = c(0.31, 0.30, 0.33, 0.33, 0.33),
mu_plane = c(0.27, 0.28, 0.23, 0.24, 0.23),
mu_blob = c(0.40, 0.42, 0.43, 0.42, 0.44)
)
metrics2 %>% ggplot(aes(x = segmentation_run, y = mu_fiber)) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(mu_fiber), y = mu_fiber + 0.005)) +
#geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
#geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
labs(title = "Mean fiber-like symmetry") +
theme(
plot.title  = element_text(hjust = 0.5)
)
library(tidyverse)
library(paletteer)
library(scales)
# metrics <- tibble(
#   segmentation_run = c("with_vas", "1", "2", "3", "4", "5"),
#   no_segments = c(77030, 116428, 70777, 55137, 65368),
#   labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797, 3057809),
#   volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292, 0.28),
#   network_length = c(8644684, 11704105, 8744396, 8928419, 8867950),
#   mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605, 1.056722),
#   # mu_fiber = c(),
#   # mu_plane = c(),
#   # mu_blob = c()
#
# )
metrics2_bad <- tibble(
segmentation_run = c("with_vas", "1", "2", "3", "4"),
# no_segments = c(77030, 116428, 70777, 55137),
# labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797),
# volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292),
# network_length = c(8644684, 11704105, 8744396, 8928419),
# mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605),
# mu_fiber = c(0.32, 0, 0, 0.33, 0.33),
# mu_plane = c(0.23, 0, 0, 0.23, 0.),
# mu_blob = c(0.42, 0, 0, 0.41)
mu_fiber = c(0.13, 0.31, 0.29, 0.32, 0.34),
mu_plane = c(0.22, 0.28, 0.28, 0.23, 0.24),
mu_blob = c(0.64, 0.41, 0.42, 0.42, 0.41),
mu_coh = c(0.35, 0.59, 0.58, 0.58, 0.59),
mean_FA = c(0.25, 0.40, 0.40, 0.39, 0.40)
)
library(tidyverse)
library(paletteer)
library(scales)
metrics <- tibble(
segmentation_run = c("with_vas", "1", "2", "3", "4", "5"),
no_segments = c(77030, 116428, 70777, 55137, 65368),
labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797, 3057809),
volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292, 0.28),
network_length = c(8644684, 11704105, 8744396, 8928419, 8867950),
mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605, 1.056722),
# mu_fiber = c(),
# mu_plane = c(),
# mu_blob = c()
)
metrics <- tibble(
segmentation_run = c("with_vas", "1", "2", "3", "4", "5"),
no_segments = c(77030, 116428, 70777, 55137, 65368),
labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797, 3057809),
volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292, 0.28),
network_length = c(8644684, 11704105, 8744396, 8928419, 8867950),
mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605, 1.056722),
# mu_fiber = c(),
# mu_plane = c(),
# mu_blob = c()
)
library(tidyverse)
library(paletteer)
library(scales)
metrics <- tibble(
segmentation_run = c("1", "2", "3", "4", "5"),
no_segments = c(77030, 116428, 70777, 55137, 65368),
labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797, 3057809),
volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292, 0.28),
network_length = c(8644684, 11704105, 8744396, 8928419, 8867950),
mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605, 1.056722),
# mu_fiber = c(),
# mu_plane = c(),
# mu_blob = c()
)
metrics2 <- tibble(
segmentation_run = c("1", "2", "3", "4", "5"),
# no_segments = c(77030, 116428, 70777, 55137),
# labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797),
# volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292),
# network_length = c(8644684, 11704105, 8744396, 8928419),
# mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605),
# mu_fiber = c(0.32, 0, 0, 0.33, 0.33),
# mu_plane = c(0.23, 0, 0, 0.23, 0.),
# mu_blob = c(0.42, 0, 0, 0.41)
mu_fiber = c(0.31, 0.30, 0.33, 0.33, 0.33),
mu_plane = c(0.27, 0.28, 0.23, 0.24, 0.23),
mu_blob = c(0.40, 0.42, 0.43, 0.42, 0.44)
)
#theme_set(theme_minimal())
# Bar plot of number of segments
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = no_segments, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(no_segments), y = no_segments + 4000)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
#theme_set(theme_minimal())
# Bar plot of number of segments
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = volume_labeled_voxels, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(volume_labeled_voxels), y = volume_labeled_voxels + 0.01)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("volume_labeled_voxels (%)")
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = network_length, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(network_length), y = network_length + 90000)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("network_length (px)")
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = labeled_voxel_count, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(labeled_voxel_count), y = labeled_voxel_count + 90000)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = network_length, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(network_length), y = network_length + 90000)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("network_length (voxels)")
library(tidyverse)
library(paletteer)
library(scales)
metrics <- tibble(
segmentation_run = c("1", "2", "3", "4", "5"),
no_segments = c(77030, 116428, 70777, 55137, 65368),
labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797, 3057809),
volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292, 0.28),
network_length = c(8644684, 11704105, 8744396, 8928419, 8867950),
mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605, 1.056722),
cont_comp = c(2.26, 2, 18.33, 24.60, 21.18)
# mu_fiber = c(),
# mu_plane = c(),
# mu_blob = c()
)
metrics2 <- tibble(
segmentation_run = c("1", "2", "3", "4", "5"),
# no_segments = c(77030, 116428, 70777, 55137),
# labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797),
# volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292),
# network_length = c(8644684, 11704105, 8744396, 8928419),
# mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605),
# mu_fiber = c(0.32, 0, 0, 0.33, 0.33),
# mu_plane = c(0.23, 0, 0, 0.23, 0.),
# mu_blob = c(0.42, 0, 0, 0.41)
mu_fiber = c(0.31, 0.30, 0.33, 0.33, 0.33),
mu_plane = c(0.27, 0.28, 0.23, 0.24, 0.23),
mu_blob = c(0.40, 0.42, 0.43, 0.42, 0.44)
)
library(tidyverse)
library(paletteer)
library(scales)
metrics <- tibble(
segmentation_run = c("1", "2", "3", "4", "5"),
no_segments = c(77030, 116428, 70777, 55137, 65368),
labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797, 3057809),
volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292, 0.28),
network_length = c(8644684, 11704105, 8744396, 8928419, 8867950),
mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605, 1.056722),
cont_comp = c(2.26, 2, 18.33, 24.60, 21.18)
# mu_fiber = c(),
# mu_plane = c(),
# mu_blob = c()
)
metrics2 <- tibble(
segmentation_run = c("1", "2", "3", "4", "5"),
# no_segments = c(77030, 116428, 70777, 55137),
# labeled_voxel_count = c(2630066, 3374092, 3077773, 3135797),
# volume_labeled_voxels = c(0.24, 0.31, 0.29, 0.292),
# network_length = c(8644684, 11704105, 8744396, 8928419),
# mean_turtuosity = c(1.055934, 1.052572, 1.059076, 1.0605),
# mu_fiber = c(0.32, 0, 0, 0.33, 0.33),
# mu_plane = c(0.23, 0, 0, 0.23, 0.),
# mu_blob = c(0.42, 0, 0, 0.41)
mu_fiber = c(0.31, 0.30, 0.33, 0.33, 0.33),
mu_plane = c(0.27, 0.28, 0.23, 0.24, 0.23),
mu_blob = c(0.40, 0.42, 0.43, 0.42, 0.44)
)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = mean_turtuosity, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(mean_turtuosity), y = mean_turtuosity + 0.001)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 0.001)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 0.01)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 0.1)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 1)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 1.2)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 1.2)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("contribution of largest cc (%)")
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 1.2)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("contribution of largest cc to voxel count (%)")
?ggsave
#theme_set(theme_minimal())
# Bar plot of number of segments
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = no_segments, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(no_segments), y = no_segments + 4000)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
ggsave("no_seg.tiff", device = "tiff", dpi = 1000)
#theme_set(theme_minimal())
# Bar plot of number of segments
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = no_segments, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(no_segments), y = no_segments + 4000)) +
geom_point()+
geom_line(group = 1)+
ylab("number of connected components")
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
ggsave("no_seg.tiff", device = "tiff", dpi = 1000)
#theme_set(theme_minimal())
# Bar plot of number of segments
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = no_segments, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(no_segments), y = no_segments + 4000)) +
geom_point()+
geom_line(group = 1)+
ylab("number of connected components")+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
ggsave("no_seg.tiff", device = "tiff", dpi = 1000)
#theme_set(theme_minimal())
# Bar plot of number of segments
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = no_segments, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(no_segments), y = no_segments + 4000)) +
geom_point()+
geom_line(group = 1)+
ylab("connected components")+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
ggsave("no_seg.tiff", device = "tiff", dpi = 1000)
#theme_set(theme_minimal())
# Bar plot of number of segments
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = volume_labeled_voxels, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(volume_labeled_voxels), y = volume_labeled_voxels + 0.01)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("volume_labeled_voxels (%)")
ggsave("vol.tiff", device = "tiff", dpi = 1000)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = network_length, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(network_length), y = network_length + 90000)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("network_length (voxels)")
ggsave("net_len.tiff", device = "tiff", dpi = 1000)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = labeled_voxel_count, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(labeled_voxel_count), y = labeled_voxel_count + 90000)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
ggsave("vx_count.tiff", device = "tiff", dpi = 1000)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 1.2)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("contribution of largest cc to voxel count (%)")
ggsave("cont_lcc.tiff", device = "tiff", dpi = 1000)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 1.2)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("% of largest cc in voxel count")
ggsave("cont_lcc.tiff", device = "tiff", dpi = 1000)
#theme_set(theme_minimal())
# Bar plot of number of segments
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = no_segments, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(no_segments), y = no_segments + 4000)) +
geom_point()+
geom_line(group = 1)+
ylab("connected components")+
ggtitle("Comparison of number of connected components")+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
ggsave("no_seg.tiff", device = "tiff", dpi = 1000)
#theme_set(theme_minimal())
# Bar plot of number of segments
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = no_segments, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(no_segments), y = no_segments + 4000)) +
geom_point()+
geom_line(group = 1)+
ylab("connected components")+
ggtitle("Comparison of number of connected components")+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("no_seg.tiff", device = "tiff", dpi = 1000)
#theme_set(theme_minimal())
# Bar plot of number of segments
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = volume_labeled_voxels, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(volume_labeled_voxels), y = volume_labeled_voxels + 0.01)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("volume_labeled_voxels (%)") +
ggtitle("Comparison of volume of labeled voxels")+
#paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("vol.tiff", device = "tiff", dpi = 1000)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = network_length, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(network_length), y = network_length + 90000)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("network_length (voxels)") +
ggtitle("Comparison of network length")+
#paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("net_len.tiff", device = "tiff", dpi = 1000)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = labeled_voxel_count, )) +
geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(labeled_voxel_count), y = labeled_voxel_count + 90000)) +
geom_point()+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ggtitle("Comparison of labeled voxel count")+
#paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("vx_count.tiff", device = "tiff", dpi = 1000)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 1.2)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("% of largest cc in voxel count") +
ggtitle("Comparison of contribution of largest cc")+
#paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("cont_lcc.tiff", device = "tiff", dpi = 1000)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 1.2)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("% of largest cc in voxel count") +
ggtitle("Comparison of contribution of largest connected component")+
#paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
ggsave("cont_lcc.tiff", device = "tiff", dpi = 1000)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 1.2)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("% of largest cc in voxel count") +
ggtitle("Comparison of contribution of largest connected component")
#paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
ggsave("cont_lcc.tiff", device = "tiff", dpi = 1000)
metrics %>%
ggplot(mapping = aes(x = segmentation_run, y = cont_comp, )) +
#geom_col(aes(fill = segmentation_run), alpha = 0.7, show.legend = FALSE) +
geom_text(aes(label = comma(cont_comp), y = cont_comp + 1.2)) +
geom_point(aes(color = segmentation_run), show.legend = FALSE, size = 5)+
geom_line(group = 1)+
paletteer::scale_fill_paletteer_d("ggsci::default_nejm") +
ylab("% of largest cc in voxel count") +
ggtitle("Contribution of largest connected component")
#paletteer::scale_fill_paletteer_d("ggsci::default_nejm")
ggsave("cont_lcc.tiff", device = "tiff", dpi = 1000)
1/(1+exp(-100000000))
1/(1+exp(100000000))
6/6
5/6
1/3
install.packages(
c("devtools", "roxygen2", "testthat", "rmarkdown", "pkgdown", "purrr")
)
devtools::has_devel()
usethis::use_git_config(
user.name = "R-icntay",          # actual first and last name
user.email = "eric.wanjau@studentpartner.com"  # email associated with GitHub account
)
.libPaths()
usethis::create_github_token()
library(devtools)
packageVersion("devtools")
getwd()
library(devtools)
library(devtools)
create_package("~libminer")
create_package("~/Desktop/libminer")
v=1:5
class(v)
typeof(v)
vv=6:10
v>vv
v
min(v)
3:8
vv > min(x)
vv > min(v)
v
vv
vv > min(x)
vv > min(v)
setwd("C:/Users/homeuser/Documents/deep_learning_fundamentals/vits")
